---

# packages
- name: Ensure opennebula packages are installed
  action: apt pkg={{item}} state=installed update_cache=yes
  with_items:
   - opennebula
   - opennebula-sunstone
   - opennebula-gate
   - opennebula-flow
   - opennebula-context
  register: install_gems

# frontend
- name: If needed, run /usr/share/one/install_gems
  shell: yes | /usr/share/one/install_gems
  when: install_gems|changed

- name: Ensure /etc/one/sunstone-server.conf is configured
  lineinfile: 'dest=/etc/one/sunstone-server.conf regexp="^:host: 127.0.0.1" line=":host: 0.0.0.0"'

- name: "Ensure oneadmin's ssh-config is configured"
  template: src=ssh-config.j2 dest=/var/lib/one/.ssh/config mode=600 owner=oneadmin group=oneadmin


# TODO install addons
# https://github.com/OpenNebula/addon-lxdone/blob/master/Setup.md#11-installation
# https://github.com/OpenNebula/addon-lxdone/archive/v5.4-5.tar.gz
# https://opennebula.org/addons/catalog/

# create network, popluate images

- name: Create a "Private Network" config
  template: src=priv.net.j2 dest=/var/lib/one/priv.net 
  become_user: oneadmin
  register: needs_population

- name: Populate network and images
  args:
    executable: /bin/bash
  shell: |
    cd
    onehost create localhost -i kvm -v kvm -n dummy
    onevnet create priv.net
    oneimage create --name "Ubuntu-1604-KVM" --path http://marketplace.c12g.com/appliance/575fcaa28fb81d438c000001/download/0 --driver qcow2 -d default 
    onetemplate create --name "Ubuntu-1604-KVM" --cpu 1 --vcpu 1 --memory 512 --arch x86_64 --disk "Ubuntu-1604-KVM" --nic "Private Network" --vnc --ssh --net_context
  become_user: oneadmin
  when: needs_population|changed

# network
- name: Ensure br0 config is placed
  template: src=ifcfg-br0.j2 dest=/etc/sysconfig/network-scripts/ifcfg-br0

- name: Ensure MASQUARADE postrouting chain is set
  iptables: table=nat chain=POSTROUTING  comment="[mage-opennebula] Deliver internet to VMs" out_interface={{ opennebula_masquerade_ext_if }} jump=MASQUERADE

# restart services
- name: If needed, enable and restart opennebula and opennebula-sunstone
  service: name="{{ item }}" state=restarted enabled=true
  with_items:
    - opennebula
    - opennebula-sunstone
    - libvirtd
  when: install_gems|changed

- pause:
    secons: 1
    
- name: Ensure opennebula and opennebula-sunstone are enabled and started
  service: name="{{ item }}" state=started enabled=true
  with_items:
    - opennebula
    - opennebula-sunstone
    - libvirtd

- name: Restart network
  service: name=network state=restarted
